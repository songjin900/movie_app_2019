{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","x","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TA2BeA,MAvBf,YAA8D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAChD,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BJ,IAC/B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAA+BD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACtC,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAEb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCuIGC,G,kNA5CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEACmCC,IAAMC,IAAI,4DAD7C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAFzB,2C,uDAMZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACI,qBAAKT,UAAU,SAAf,SACD,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GACV,OAAO,cAAC,EAAD,CAELxB,GAAIwB,EAAExB,GACNC,KAAMuB,EAAEvB,KACRC,MAAOsB,EAAEtB,MACTC,QAASqB,EAAErB,QACXC,OAAQoB,EAAEC,mBACVpB,OAAQmB,EAAEnB,QANLmB,EAAExB,e,GA5BL0B,IAAMC,YC3FTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.257992e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movies({ id, year, title, summary, poster, genres }) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\" >{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">{genres.map((genre, index) =>\r\n                <li key={index} className=\"genres__genre\">{genre}</li>\r\n            )}</ul>\r\n            <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nMovies.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\nexport default Movies;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movies from './Movie';\nimport \"./App.css\"\n\n\n\n// function Food({ name, picture, rating }) {\n//   return <div>\n//     <h2>I like {name}</h2>\n//     <h5>rating: {rating}/5</h5>\n//     <img src={picture} alt={name} width=\"200\" height=\"180\" />\n//   </div>\n// }\n\n// const FoodILike = [\n//   {\n//     id: 1,\n//     name: \"kimchi\",\n//     image: \"https://food-guide.canada.ca/themes/custom/wxtsub_bootstrap/images/food_guide_visual_en.png\",\n//     rating: 5\n//   }, {\n//     id: 2,\n//     name: \"sam\",\n//     image: \"https://food-guide.canada.ca/themes/custom/wxtsub_bootstrap/images/food_guide_visual_en.png\",\n//     rating: 2\n//   },\n//   {\n//     id: 3,\n//     name: \"bibi\",\n//     image: \"https://food-guide.canada.ca/themes/custom/wxtsub_bootstrap/images/food_guide_visual_en.png\",\n//     rating: 4.3\n//   },\n//   {\n//     id: 4,\n//     name: \"ham\",\n//     image: \"https://food-guide.canada.ca/themes/custom/wxtsub_bootstrap/images/food_guide_visual_en.png\",\n//     rating: 4.2,\n//   },\n//   {\n//     id: 5,\n//     name: \"meat\",\n//     image: \"https://food-guide.canada.ca/themes/custom/wxtsub_bootstrap/images/food_guide_visual_en.png\",\n//     rating: 2.5\n//   }\n// ]\n\n// Food.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   picture: PropTypes.string.isRequired,\n//   rating: PropTypes.number.isRequired\n// };\n// //Function Component\n// function App() {\n//   return (\n//     <div>\n//       {FoodILike.map(x => (<Food key={x.id} name={x.name} picture={x.image} rating={x.rating} />))}\n//     </div>\n//   );\n// }\n\n// //Class component\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     console.log(\"hello\");\n//   }\n\n//   //state is an object; date that will change\n//   state = {\n//     count: 0\n//   }\n//   //setState re-render\n//   //add() () means run right now\n//   add = () => {\n//     console.log(\"add\");\n//     this.setState(x => ({ count: x.count + 1 }));\n//   };\n//   minus = () => {\n//     console.log(\"minus\")\n//     this.setState({ count: this.state.count - 1 });\n//   };\n//   componentDidMount() {\n//     console.log(\"component did rendered\");\n//   }\n//   componentDidUpdate() {\n//     console.log(\"I just updated\");\n//   }\n//   componentWillUnmount() {\n//     console.log(\"bye\");\n//   }\n\n//   render() {\n//     console.log(\"i am rendering\");\n//     return <div>\n//       <h1>The number is: {this.state.count}</h1>\n//       <button onClick={this.add}>Add</button>\n//       <button onClick={this.minus}>Minus</button>\n//     </div>\n//   }\n// }\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovies = async () => {\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading\n          ? (<div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>)\n          :\n          <div className=\"movies\">\n            {movies.map(x => {\n              return <Movies\n                key={x.id}\n                id={x.id}\n                year={x.year}\n                title={x.title}\n                summary={x.summary}\n                poster={x.medium_cover_image}\n                genres={x.genres}\n              />\n            })}\n\n          </div>\n        }\n      </section>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}